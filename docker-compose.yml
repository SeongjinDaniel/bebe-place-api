version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bebe-place-postgres
    environment:
      POSTGRES_DB: bebe_place
      POSTGRES_USER: bebe_user
      POSTGRES_PASSWORD: bebe_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bebe-place-network

  # Redis for Session & Cache
  redis:
    image: redis:7-alpine
    container_name: bebe-place-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bebe-place-network

  # MinIO for Object Storage (S3 compatible)
  minio:
    image: minio/minio
    container_name: bebe-place-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - bebe-place-network

  # Application (개발용)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bebe-place-app
    environment:
      SPRING_PROFILES_ACTIVE: local
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bebe_place
      SPRING_DATASOURCE_USERNAME: bebe_user
      SPRING_DATASOURCE_PASSWORD: bebe_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - bebe-place-network
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  bebe-place-network:
    driver: bridge